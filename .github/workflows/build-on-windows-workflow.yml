name: Build LisaEm on Windows
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    steps:
      # Avoid \r\n line endings
      - run: git config --global core.autocrlf input

      # Checks-out my repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Installs the latest Cygwin with default packages
      - name: Install Cygwin
        uses: cygwin/cygwin-install-action@master
        with:
          # Provide a space-separated or comma-separated list of packages to install
          packages: mingw64-x86_64-gcc-core mingw64-x86_64-gcc-debug-info mingw64-x86_64-gcc-g++ mingw64-x86_64-gcc-objc gcc-core gcc-g++ make

      - name: Run a simple echo command in Cygwin to test the installation
        shell: bash --login --norc -eo pipefail {0}
        run: echo "Cygwin is installed!"

      - name: Print the installed Cygwin version
        shell: bash --login --norc -eo pipefail {0}
        run: cygcheck -c cygwin

      - name: List the checked out LisaEm files (the top folder only)
        shell: bash --login --norc -eo pipefail {0}
        run: ls -la "$(cygpath '${{ github.workspace }}')"

      - name: Download WxWidgets from the web and build it
        shell: bash --login --norc -eo pipefail {0}
        run: cd "$(cygpath '${{ github.workspace }}')/scripts" && ./build-wx3.2.7-cygwin-windows.sh

      - name: Build LisaEm
        shell: bash --login --norc -eo pipefail {0}
        run: cd "$(cygpath '${{ github.workspace }}')" && ./build.sh clean build

      - name: List the produced executable lisaem.exe
        shell: bash --login --norc -eo pipefail {0}
        run: ls -l "$(cygpath '${{ github.workspace }}')/bin/lisaem.exe"
